defaults:
  run:
    shell: bash -l {0}
env:
  MAVEN_ARGS: -B --no-transfer-progress
  MAVEN_OPTS: -Xms1024M -Xmx2048M -XX:MaxMetaspaceSize=1024m -XX:-UseGCOverheadLimit
    -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3
  SPARK_LOCAL_IP: 127.0.0.1
  SPARK_PRINT_LAUNCH_COMMAND: 'true'
  ZEPPELIN_HELIUM_REGISTRY: helium
  ZEPPELIN_LOCAL_IP: 127.0.0.1
jobs:
  core-modules:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Tune Runner VM
      uses: ./.github/actions/tune-runner-vm
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository

          !~/.m2/repository/org/apache/zeppelin/

          ~/.spark-dist

          ~/.cache

          ~/conda_pkgs_dir

          '
        restore-keys: '${{ runner.os }}-zeppelin-

          '
    - continue-on-error: true
      name: install application with some interpreter
      run: ./mvnw install -Pbuild-distr -DskipTests -pl zeppelin-server,zeppelin-web,spark-submit,spark/scala-2.12,spark/scala-2.13,markdown,angular,shell
        -am -Phelium-dev -Pexamples -P${{ matrix.hadoop }} ${MAVEN_ARGS}
    - continue-on-error: true
      name: install and test plugins
      run: ./mvnw package -pl zeppelin-plugins -amd ${MAVEN_ARGS}
    - continue-on-error: true
      name: Setup conda environment with python 3.9 and R
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: python_3_with_R
        auto-activate-base: false
        channel-priority: true
        channels: conda-forge,defaults
        environment-file: testing/env_python_3.9_with_R.yml
        miniforge-variant: Mambaforge
        python-version: 3.9
        use-mamba: true
    - continue-on-error: true
      name: Make IRkernel available to Jupyter
      run: 'R -e "IRkernel::installspec()"

        conda list

        conda info

        '
    - continue-on-error: true
      name: run tests with ${{ matrix.hadoop }}
      run: ./mvnw verify -Pusing-packaged-distr -pl zeppelin-server,zeppelin-web,spark-submit,spark/scala-2.12,spark/scala-2.13,markdown,angular,shell
        -am -Phelium-dev -Pexamples -P${{ matrix.hadoop }} -Dtests.to.exclude=**/org/apache/zeppelin/spark/*
        -DfailIfNoTests=false
    strategy:
      fail-fast: false
      matrix:
        hadoop:
        - hadoop3
        java:
        - 8
        - 11
  default-build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Tune Runner VM
      uses: ./.github/actions/tune-runner-vm
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository

          !~/.m2/repository/org/apache/zeppelin/

          ~/.spark-dist

          ~/.cache

          '
        restore-keys: '${{ runner.os }}-zeppelin-

          '
    - continue-on-error: true
      name: build without any profiles
      run: ./mvnw clean verify -DskipTests ${MAVEN_ARGS}
    strategy:
      fail-fast: false
      matrix:
        java:
        - 8
        - 11
  flink-test-and-flink-integration-test:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Tune Runner VM
      uses: ./.github/actions/tune-runner-vm
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 8
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository

          !~/.m2/repository/org/apache/zeppelin/

          ~/.spark-dist

          ~/.cache

          '
        restore-keys: '${{ runner.os }}-zeppelin-

          '
    - continue-on-error: true
      name: install environment for flink
      run: './mvnw install -DskipTests -am -pl flink/flink-scala-2.12,flink-cmd,zeppelin-interpreter-integration
        -Pflink-${{ matrix.flink }} -Phadoop3 -Pintegration ${MAVEN_ARGS}

        ./mvnw clean package -pl zeppelin-plugins -amd -DskipTests ${MAVEN_ARGS}

        '
    - continue-on-error: true
      name: Setup conda environment with python ${{ matrix.python }} and R
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: python_3_with_flink
        auto-activate-base: false
        channel-priority: true
        channels: conda-forge,defaults
        environment-file: testing/env_python_3_with_flink_${{ matrix.flink }}.yml
        miniforge-variant: Mambaforge
        python-version: ${{ matrix.python }}
        use-mamba: true
    - continue-on-error: true
      name: run tests for flink
      run: ./mvnw verify -pl flink/flink-scala-2.12,flink-cmd,zeppelin-interpreter-integration
        -Pflink-${{ matrix.flink }} -am -Phadoop3 -Pintegration -DfailIfNoTests=false
        -Dtest=org.apache.zeppelin.flink.*Test,FlinkIntegrationTest${{ matrix.flink
        }} ${MAVEN_ARGS}
    - continue-on-error: true
      if: always()
      name: Print zeppelin logs
      run: if [ -d "logs" ]; then cat logs/*; fi
    strategy:
      fail-fast: false
      matrix:
        flink:
        - 116
        - 117
        include:
        - flink: 115
          python: 3.8
        python:
        - 3.9
  interpreter-test-jupyter-python-rlang:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Tune Runner VM
      uses: ./.github/actions/tune-runner-vm
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository

          !~/.m2/repository/org/apache/zeppelin/

          ~/.spark-dist

          ~/.cache

          '
        restore-keys: '${{ runner.os }}-zeppelin-

          '
    - continue-on-error: true
      name: Setup conda environment with python ${{ matrix.python }} and R
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: python_3_with_R
        auto-activate-base: false
        channel-priority: true
        channels: conda-forge,defaults
        environment-file: testing/env_python_${{ matrix.python }}_with_R.yml
        miniforge-variant: Mambaforge
        python-version: ${{ matrix.python }}
        use-mamba: true
    - continue-on-error: true
      name: Make IRkernel available to Jupyter
      run: 'R -e "IRkernel::installspec()"

        '
    - continue-on-error: true
      name: install environment
      run: './mvnw install -DskipTests -pl python,rlang,zeppelin-jupyter-interpreter
        -am -Phadoop3 ${MAVEN_ARGS}

        '
    - continue-on-error: true
      name: run tests with ${{ matrix.python }}
      run: './mvnw test -pl python,rlang,zeppelin-jupyter-interpreter -DfailIfNoTests=false
        ${MAVEN_ARGS}

        '
    strategy:
      fail-fast: false
      matrix:
        include:
        - java: 8
          python: 3.7
        - java: 8
          python: 3.8
        java:
        - 8
        - 11
        python:
        - 3.9
  interpreter-test-non-core:
    env:
      INTERPRETERS: hbase,jdbc,file,flink-cmd,cassandra,elasticsearch,bigquery,alluxio,livy,groovy,java,neo4j,sparql,mongodb,influxdb,shell
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Tune Runner VM
      uses: ./.github/actions/tune-runner-vm
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository

          !~/.m2/repository/org/apache/zeppelin/

          ~/.spark-dist

          ~/.cache

          '
        restore-keys: '${{ runner.os }}-zeppelin-

          '
    - continue-on-error: true
      name: install environment
      run: ./mvnw install -DskipTests -am -pl ${INTERPRETERS} ${MAVEN_ARGS}
    - continue-on-error: true
      name: Setup conda environment with python 3.9 and R
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: python_3_with_R_and_tensorflow
        auto-activate-base: false
        channel-priority: true
        channels: conda-forge,defaults
        environment-file: testing/env_python_3_with_R_and_tensorflow.yml
        miniforge-variant: Mambaforge
        python-version: 3.9
        use-mamba: true
    - continue-on-error: true
      name: verify interpreter
      run: ./mvnw verify -am -pl ${INTERPRETERS} ${MAVEN_ARGS}
    strategy:
      fail-fast: false
      matrix:
        java:
        - 8
        - 11
  livy-0-8-with-spark-2-4-under-python37:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Tune Runner VM
      uses: ./.github/actions/tune-runner-vm
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 8
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository

          !~/.m2/repository/org/apache/zeppelin/

          ~/.spark-dist

          ~/.cache

          '
        restore-keys: '${{ runner.os }}-zeppelin-

          '
    - continue-on-error: true
      name: install environment
      run: './mvnw install -DskipTests -pl livy -am  ${MAVEN_ARGS}

        ./testing/downloadSpark.sh "2.4.8" "2.7"

        ./testing/downloadLivy.sh "0.8.0-incubating" "2.11"

        '
    - continue-on-error: true
      name: Setup conda environment with python 3.7 and R
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: python_37_with_R
        auto-activate-base: false
        channel-priority: true
        channels: conda-forge,defaults
        environment-file: testing/env_python_3.7_with_R.yml
        miniforge-variant: Mambaforge
        python-version: 3.7
        use-mamba: true
    - continue-on-error: true
      name: Make IRkernel available to Jupyter
      run: 'R -e "IRkernel::installspec()"

        '
    - continue-on-error: true
      name: run tests
      run: 'export SPARK_HOME=$PWD/spark-2.4.8-bin-hadoop2.7

        export LIVY_HOME=$PWD/apache-livy-0.8.0-incubating_2.11-bin

        ./mvnw verify -pl livy -am ${MAVEN_ARGS}

        '
  spark-integration-test:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Tune Runner VM
      uses: ./.github/actions/tune-runner-vm
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository

          !~/.m2/repository/org/apache/zeppelin/

          ~/.spark-dist

          ~/.cache

          '
        restore-keys: '${{ runner.os }}-zeppelin-

          '
    - continue-on-error: true
      name: install environment
      run: './mvnw install -DskipTests -pl zeppelin-interpreter-integration,zeppelin-web,spark-submit,spark/scala-2.12,spark/scala-2.13,markdown
        -am -Phadoop3 -Pintegration ${MAVEN_ARGS}

        ./mvnw clean package -pl zeppelin-plugins -amd -DskipTests ${MAVEN_ARGS}

        '
    - continue-on-error: true
      name: Setup conda environment with python 3.9 and R
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: python_3_with_R
        auto-activate-base: false
        channel-priority: true
        channels: conda-forge,defaults
        environment-file: testing/env_python_3_with_R.yml
        miniforge-variant: Mambaforge
        python-version: 3.9
        use-mamba: true
    - continue-on-error: true
      name: Make IRkernel available to Jupyter
      run: 'R -e "IRkernel::installspec()"

        '
    - continue-on-error: true
      name: run tests on hadoop${{ matrix.hadoop }}
      run: ./mvnw test -pl zeppelin-interpreter-integration -Phadoop${{ matrix.hadoop
        }} -Pintegration -Dtest=SparkSubmitIntegrationTest,ZeppelinSparkClusterTest32,SparkIntegrationTest32,ZeppelinSparkClusterTest33,SparkIntegrationTest33
        -DfailIfNoTests=false ${MAVEN_ARGS}
    strategy:
      fail-fast: false
      matrix:
        hadoop:
        - 3
        java:
        - 8
        - 11
  spark-test:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Tune Runner VM
      uses: ./.github/actions/tune-runner-vm
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository

          !~/.m2/repository/org/apache/zeppelin/

          ~/.spark-dist

          ~/.cache

          '
        restore-keys: '${{ runner.os }}-zeppelin-

          '
    - continue-on-error: true
      name: install environment
      run: ./mvnw install -DskipTests -pl spark-submit,spark/scala-2.12,spark/scala-2.13
        -am -Phadoop3 ${MAVEN_ARGS}
    - continue-on-error: true
      name: Setup conda environment with python ${{ matrix.python }} and R
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: python_3_with_R
        auto-activate-base: false
        channel-priority: true
        channels: conda-forge,defaults
        environment-file: testing/env_python_${{ matrix.python }}_with_R.yml
        miniforge-variant: Mambaforge
        python-version: ${{ matrix.python }}
        use-mamba: true
    - continue-on-error: true
      name: Make IRkernel available to Jupyter
      run: 'R -e "IRkernel::installspec()"

        '
    - continue-on-error: true
      name: run spark-3.2 tests with scala-2.12 and python-${{ matrix.python }}
      run: 'rm -rf spark/interpreter/metastore_db

        ./mvnw verify -pl spark-submit,spark/interpreter -am -Dtest=org/apache/zeppelin/spark/*
        -Pspark-3.2 -Pspark-scala-2.12 -Phadoop3 -Pintegration -DfailIfNoTests=false
        ${MAVEN_ARGS}

        '
    - continue-on-error: true
      name: run spark-3.2 tests with scala-2.13 and python-${{ matrix.python }}
      run: 'rm -rf spark/interpreter/metastore_db

        ./mvnw verify -pl spark-submit,spark/interpreter -am -Dtest=org/apache/zeppelin/spark/*
        -Pspark-3.2 -Pspark-scala-2.13 -Phadoop3 -Pintegration -DfailIfNoTests=false
        ${MAVEN_ARGS}

        '
    - continue-on-error: true
      name: run spark-3.3 tests with scala-2.12 and python-${{ matrix.python }}
      run: 'rm -rf spark/interpreter/metastore_db

        ./mvnw verify -pl spark-submit,spark/interpreter -am -Dtest=org/apache/zeppelin/spark/*
        -Pspark-3.3 -Pspark-scala-2.12 -Phadoop3 -Pintegration -DfailIfNoTests=false
        ${MAVEN_ARGS}

        '
    - continue-on-error: true
      name: run spark-3.3 tests with scala-2.13 and python-${{ matrix.python }}
      run: 'rm -rf spark/interpreter/metastore_db

        ./mvnw verify -pl spark-submit,spark/interpreter -am -Dtest=org/apache/zeppelin/spark/*
        -Pspark-3.3 -Pspark-scala-2.13 -Phadoop3 -Pintegration -DfailIfNoTests=false
        ${MAVEN_ARGS}

        '
    - continue-on-error: true
      name: run spark-3.4 tests with scala-2.13 and python-${{ matrix.python }}
      run: 'rm -rf spark/interpreter/metastore_db

        ./mvnw verify -pl spark-submit,spark/interpreter -am -Dtest=org/apache/zeppelin/spark/*
        -Pspark-3.4 -Pspark-scala-2.13 -Phadoop3 -Pintegration -DfailIfNoTests=false
        ${MAVEN_ARGS}

        '
    - continue-on-error: true
      if: matrix.python >= '3.8'
      name: run spark-3.5 tests with scala-2.13 and python-${{ matrix.python }}
      run: 'rm -rf spark/interpreter/metastore_db

        ./mvnw verify -pl spark-submit,spark/interpreter -am -Dtest=org/apache/zeppelin/spark/*
        -Pspark-3.5 -Pspark-scala-2.13 -Phadoop3 -Pintegration -DfailIfNoTests=false
        ${MAVEN_ARGS}

        '
    strategy:
      fail-fast: false
      matrix:
        include:
        - java: 8
          python: 3.7
        - java: 8
          python: 3.8
        java:
        - 8
        - 11
        python:
        - 3.9
  zeppelin-integration-test:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Start mysql
      run: sudo systemctl start mysql.service
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Tune Runner VM
      uses: ./.github/actions/tune-runner-vm
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository

          !~/.m2/repository/org/apache/zeppelin/

          ~/.spark-dist

          ~/.cache

          '
        restore-keys: '${{ runner.os }}-zeppelin-

          '
    - continue-on-error: true
      name: install environment
      run: './mvnw install -DskipTests -Phadoop3 -Pintegration -pl zeppelin-interpreter-integration,zeppelin-web,spark-submit,spark/scala-2.12,spark/scala-2.13,markdown,flink-cmd,flink/flink-scala-2.12,jdbc,shell
        -am -Pflink-117 ${MAVEN_ARGS}

        ./mvnw package -pl zeppelin-plugins -amd -DskipTests ${MAVEN_ARGS}

        '
    - continue-on-error: true
      name: Setup conda environment with python 3.9 and R
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: python_3_with_R
        auto-activate-base: false
        channel-priority: true
        channels: conda-forge,defaults
        environment-file: testing/env_python_3_with_R.yml
        miniforge-variant: Mambaforge
        python-version: 3.9
        use-mamba: true
    - continue-on-error: true
      name: Make IRkernel available to Jupyter
      run: 'R -e "IRkernel::installspec()"

        '
    - continue-on-error: true
      name: run tests
      run: ./mvnw test -pl zeppelin-interpreter-integration -Phadoop3 -Pintegration
        -DfailIfNoTests=false -Dtest=ZeppelinClientIntegrationTest,ZeppelinClientWithAuthIntegrationTest,ZSessionIntegrationTest,ShellIntegrationTest,JdbcIntegrationTest
    - continue-on-error: true
      if: always()
      name: Print zeppelin logs
      run: if [ -d "logs" ]; then cat logs/*; fi
    strategy:
      fail-fast: false
      matrix:
        java:
        - 8
        - 11
name: core
on:
  repository_dispatch:
    types: trigger-ga___core.yml
permissions:
  contents: read
